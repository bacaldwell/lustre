diff --git a/fs/ext4/ext4.h b/fs/ext4/ext4.h
index a75fba6..6d6f781 100644
--- a/fs/ext4/ext4.h
+++ b/fs/ext4/ext4.h
@@ -932,6 +932,8 @@ struct ext4_inode_info {
 	tid_t i_sync_tid;
 	tid_t i_datasync_tid;
 
+	__u64 i_fs_version;
+
 #ifdef CONFIG_QUOTA
 	struct dquot *i_dquot[MAXQUOTAS];
 #endif
diff --git a/fs/ext4/ialloc.c b/fs/ext4/ialloc.c
index ac644c3..607229f 100644
--- a/fs/ext4/ialloc.c
+++ b/fs/ext4/ialloc.c
@@ -996,6 +996,7 @@ got:
 	ei->i_dtime = 0;
 	ei->i_block_group = group;
 	ei->i_last_alloc_group = ~0;
+	ei->i_fs_version = 0;
 
 	ext4_set_inode_flags(inode);
 	if (IS_DIRSYNC(inode))
diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c
index 5653fa4..91fef46 100644
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -4018,11 +4018,12 @@ struct inode *ext4_iget(struct super_block *sb, unsigned long ino)
 	EXT4_EINODE_GET_XTIME(i_crtime, ei, raw_inode);
 
 	if (likely(!test_opt2(inode->i_sb, HURD_COMPAT))) {
-		inode->i_version = le32_to_cpu(raw_inode->i_disk_version);
+		ei->i_fs_version = le32_to_cpu(raw_inode->i_disk_version);
 		if (EXT4_INODE_SIZE(inode->i_sb) > EXT4_GOOD_OLD_INODE_SIZE) {
 			if (EXT4_FITS_IN_INODE(raw_inode, ei, i_version_hi))
-				inode->i_version |=
+				ei->i_fs_version |=
 		    (__u64)(le32_to_cpu(raw_inode->i_version_hi)) << 32;
+
 		}
 	}
 
@@ -4191,6 +4192,7 @@ static int ext4_do_update_inode(handle_t *handle,
 		raw_inode->i_gid_low = cpu_to_le16(fs_high2lowgid(i_gid));
 		raw_inode->i_uid_high = 0;
 		raw_inode->i_gid_high = 0;
+		    (__u64)(le32_to_cpu(raw_inode->i_version_hi)) << 32;
 	}
 	raw_inode->i_links_count = cpu_to_le16(inode->i_nlink);
 
@@ -4239,11 +4241,11 @@ static int ext4_do_update_inode(handle_t *handle,
 	}
 
 	if (likely(!test_opt2(inode->i_sb, HURD_COMPAT))) {
-		raw_inode->i_disk_version = cpu_to_le32(inode->i_version);
+		raw_inode->i_disk_version = cpu_to_le32(ei->i_fs_version);
 		if (ei->i_extra_isize) {
 			if (EXT4_FITS_IN_INODE(raw_inode, ei, i_version_hi))
-				raw_inode->i_version_hi =
-					cpu_to_le32(inode->i_version >> 32);
+				raw_inode->i_version_hi = cpu_to_le32(ei->i_fs_version
+								      >> 32);
 			raw_inode->i_extra_isize =
 				cpu_to_le16(ei->i_extra_isize);
 		}
